### deoplete------------------
#[[plugins]]
#repo = 'Shougo/deoplete.nvim'
#on_event = 'InsertCharPre'
#hook_source = '''
#  let g:deoplete#enable_at_startup = 1
#  let g:deoplete#auto_complete_delay = 0
#  let g:deoplete#auto_complete_start_length = 1
#  let g:deoplete#enable_camel_case = 0
#  let g:deoplete#enable_ignore_case = 0
#  let g:deoplete#enable_refresh_always = 0
#  let g:deoplete#enable_smart_case = 1
#  let g:deoplete#file#enable_buffer_path = 1
#  let g:deoplete#max_list = 10000
#  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
#    \ neosnippet#expandable_or_jumpable() ?
#    \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
#'''
#on_i = 1
#
#[[plugins]]
#repo = 'roxma/vim-hug-neovim-rpc'
#on_source = ['nvim-yarp', 'denite.nvim']
#
#[[plugins]]
#repo = 'roxma/nvim-yarp'
#depends = ['vim-hug-neovim-rpc']
### END deoplete------------------
#
## denite--------------------
#[[plugins]]
#repo = 'Shougo/neomru.vim'
#on_if = 1
#on_source = ['unite.vim', 'denite.nvim']
#
#[[plugins]]
#repo = 'Shougo/denite.nvim'
#depends = ['neomru.vim']
#on_event = 'BufRead'
#on_cmd = 'Denite'
#hook_source = '''
#    call denite#custom#var('file_rec', 'command',
#    \ ['pt', '--follow', '--nocolor', '--nogroup', '--hidden', '-g', ''])
#    call denite#custom#var('grep', 'command',
#    \ ['pt', '--nogroup', '--nocolor', '--smart-case', '--hidden'])
#    call denite#custom#var('grep', 'default_opts', [])
#    call denite#custom#var('grep', 'recursive_opts', [])
#'''
#hook_add = '''
#  nnoremap <silent> ;r
#        \ :<C-u>Denite -buffer-name=register
#        \ register neoyank<CR>
#  xnoremap <silent> ;r
#        \ :<C-u>Denite -default-action=replace -buffer-name=register
#        \ register neoyank<CR>
#  nnoremap <silent> [Window]<Space>
#        \ :<C-u>Denite file/rec:~/.vim/rc<CR>
#  nnoremap <silent> / :<C-u>Denite -buffer-name=search -auto-highlight
#        \ line<CR>
#  nnoremap <silent> * :<C-u>DeniteCursorWord -buffer-name=search
#        \ -auto-highlight -mode=normal line<CR>
#  nnoremap <silent> [Window]s :<C-u>Denite file/point file/old
#        \ -sorters=sorter/rank
#        \ `finddir('.git', ';') != '' ? 'file/rec/git' : 'file/rec'`
#        \ file file:new<CR>
#  nnoremap <silent><expr> tt  &filetype == 'help' ?  "g\<C-]>" :
#        \ ":\<C-u>DeniteCursorWord -buffer-name=tag -immediately
#        \  tag:include\<CR>"
#  nnoremap <silent><expr> tp  &filetype == 'help' ?
#        \ ":\<C-u>pop\<CR>" : ":\<C-u>Denite -mode=normal jump\<CR>"
#  nnoremap <silent> [Window]n :<C-u>Denite dein<CR>
#  nnoremap <silent> [Window]g :<C-u>Denite ghq<CR>
#  nnoremap <silent> ;g :<C-u>Denite -buffer-name=search
#        \ -no-empty -mode=normal grep<CR>
#  nnoremap <silent> n :<C-u>Denite -buffer-name=search
#        \ -resume -mode=normal -refresh<CR>
#  nnoremap <silent> ft :<C-u>Denite filetype<CR>
#  nnoremap <silent> <C-t> :<C-u>Denite
#        \ -select=`tabpagenr()-1` -mode=normal deol:zsh<CR>
#  nnoremap <silent> <C-k> :<C-u>Denite -mode=normal change jump<CR>
#  nnoremap <silent> [Space]gs :<C-u>Denite gitstatus<CR>
#  nnoremap <silent> ;;
#        \ :<C-u>Denite command command_history<CR>
#'''
# END denite--------------------

# ------------------かっこ編集
[[plugins]]
repo = 'tpope/vim-surround'

# ------------------vim-gitguitter
[[plugins]]
repo = 'airblade/vim-gitgutter'

# syntax highlight
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

# ------------------quote内のプログラムをシンタックスハイライトする
[[plugins]]
repo = 'joker1007/vim-markdown-quote-syntax'
on_ft = ['markdown','mkd', 'md']


#[[plugins]]
#repo = 'autozimu/LanguageClient-neovim'
#rev = 'next'
#build = 'source install.sh'
#hook_source = '''
#set hidden
#let g:LanguageClient_serverCommands = {
#    \ 'python': ['pyls'],
#    \ 'ruby': ['solargraph', 'stdio']
#    \}
#nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>
#nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
#nnoremap <silent> <F2> :call LanguageClient#textDocument_rename()<CR>
#'''

#
## neosnippet----------------
#[[plugins]]
#repo = 'Shougo/neosnippet.vim'
#depends = ['neosnippet-snippets', 'context_filetype.vim']
#on_i = 1
#hook_source = '''
#" Plugin key-mappings.
#" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
#"imap <C-k>     <Plug>(neosnippet_expand_or_jump)
#"smap <C-k>     <Plug>(neosnippet_expand_or_jump)
#"xmap <C-k>     <Plug>(neosnippet_expand_target)
#
#" SuperTab like snippets behavior.
#" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
#imap <expr><TAB>
# \ pumvisible() ? "\<C-n>" :
# \ neosnippet#expandable_or_jumpable() ?
# \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
#
#imap <expr><CR>
#\ (pumvisible() && neosnippet#expandable()) ? "\<Plug>(neosnippet_expand_or_jump)" : "\<CR>"
#
#
#smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
#\ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
#
#" For conceal markers.
#"if has('conceal')
#"  set conceallevel=2 concealcursor=niv
#"endif
#'''
#
#[[plugins]]
#repo = 'Shougo/neosnippet-snippets'
#on_source = ['neosnippet.vim']
#
#[[plugins]]
#repo = 'honza/vim-snippets'
#
#[[plugins]]
#repo = "davidhalter/jedi-vim"
#on_ft = ['python']
#
#[[plugins]]
#repo = 'fatih/vim-go'
#on_ft = ['go']
#
##[[plugins]]
##repo = 'godlygeek/tabular'
##
##[[plugins]]
##repo = 'plasticboy/vim-markdown'
##depends = ['vim-markdown']
##on_ft = ['markdown','mkd','md']
##
#[[plugins]]
#repo = 'Shougo/context_filetype.vim'
#

