# Required:
[[plugins]]
repo = '$HOME/.vim/dein/repos/github.com/Shougo/dein.vim'

[[plugins]]
repo = 'leico/autodate.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'terryma/vim-expand-region'

[[plugins]]
repo = 'Townk/vim-autoclose'

# neotrees------------------
[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'

 # カラースキーマ
[[plugins]]
repo = 'w0ng/vim-hybrid'

[[plugins]]
repo = 'tomasr/molokai'

#[[plugins]]
#repo = 'junegunn/fzf.vim'
#hook_add = '''
#" =====================FZF ファイル検索
#nnoremap <C-p> :FZFFileList<CR>
#command! FZFFileList call fzf#run({
#            \ 'source': 'find . -type d -name .git -prune -o ! -name .DS_Store',
#            \ 'sink': 'e'})
#" =====================FZF MRU(Most Recently Used)
#command Fmru FZFMru
#command FZFMru call fzf#run({
#            \  'source':  v:oldfiles,
#            \  'sink':    'tabe',
#            \  'options': '-m -x +s',
#            \  'down':    '40%'})
#'''

#[[plugins]]
#repo='prabirshrestha/async.vim'
#
#[[plugins]]
#repo='prabirshrestha/vim-lsp'
#depends = ['async.vim']
#hook_add='''
#if executable('clangd')
#    au User lsp_setup call lsp#register_server({
#        \ 'name': 'clangd',
#        \ 'cmd': {server_info->['clangd']},
#        \ 'whitelist': ['c', 'cpp', 'objc', 'objcpp'],
#        \ })
#endif
#if executable('solargraph')
#    " gem install solargraph
#    au User lsp_setup call lsp#register_server({
#        \ 'name': 'solargraph',
#        \ 'cmd': {server_info->[&shell, &shellcmdflag, 'solargraph stdio']},
#        \ 'initialization_options': {"diagnostics": "true"},
#        \ 'whitelist': ['ruby', 'rb', 'rsb'],
#        \ })
#endif
#
#let g:lsp_signs_enabled = 1         " enable signs
#let g:lsp_diagnostics_echo_cursor = 1 " enable echo under cursor when in normal mode
#
#let g:lsp_signs_error = {'text': '✗'}
#let g:lsp_signs_warning = {'text': '‼'}
#'''
#
#[[plugins]]
#repo='prabirshrestha/asyncomplete.vim'
#
#[[plugins]]
#repo='prabirshrestha/asyncomplete-lsp.vim'
#
#[[plugins]]
#repo='prabirshrestha/asyncomplete-neosnippet.vim'
#hook_add='''
#call asyncomplete#register_source(asyncomplete#sources#neosnippet#get_source_options({
#    \ 'name': 'neosnippet',
#    \ 'whitelist': ['*'],
#    \ 'completor': function('asyncomplete#sources#neosnippet#completor'),
#    \ }))
#imap <C-k>     <Plug>(neosnippet_expand_or_jump)
#smap <C-k>     <Plug>(neosnippet_expand_or_jump)
#xmap <C-k>     <Plug>(neosnippet_expand_target)
#'''
# ----------------deoplete

